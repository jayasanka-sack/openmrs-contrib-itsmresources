---

# Database
datadog_tags_extra:
  - "service:database"

# atlassian products need to connect to mysql
ufw_rules:
   mysql:
     port: 3306
     proto: tcp
     rule: allow

# datadog_checks:
#   mysql:
#     init_config:
#     instances:
#       - server: localhost
#         user: datadog
#         pass: '{{ vault_datadog_mysql_user }}'
#         options:
#             replication: false
#             galera_cluster: false
#             extra_status_metrics: true
#             extra_innodb_metrics: true
#             extra_performance_metrics: false
#             schema_size_metrics: false
#             disable_innodb_metrics: false


# Mysql configuration
mysql_root_pass: '{{ vault_mysql_root_password }}'
mysql_port: '3306'
mysql_bind_address: '0.0.0.0'
mysql_max_allowed_packet: "256M"
mysql_binlog_format: "ROW"
mysql_mysqldump_max_allowed_packet: "256M"
mysql_max_connections: 500
mysql_innodb_buffer_pool_size: "8G"
mysql_innodb_log_file_size: "2G"

# Change this to YES to configure file
# note: it restarts the service every ansible run
overwrite_global_mycnf: no

mysql_databases:
  - name: crowd
    encoding: utf8
    collation: utf8_bin
  - name: bamboo
    encoding: utf8
    collation: utf8_bin
  - name: confluence
    encoding: utf8
    collation: utf8_bin
mysql_users:
  - name: '{{ vault_mysql_user_name }}'
    host: "%"
    password: '{{ vault_mysql_user_password }}'
    priv: "*.*:ALL"
  - name: '{{ backup_user }}'
    host: "localhost"
    password: '{{ vault_mysql_backup_user_password }}'
    priv: "*.*:ALL"
  - name: 'confluence_user'
    host: "%"
    password: '{{ vault_mysql_confluence_user_password }}'
    priv: "confluence.*:ALL"

# Mysql Backup Configuration
gcoop_mysqldump_mysql_username: '{{ backup_user }}'
gcoop_mysqldump_mysql_password: '{{ vault_mysql_backup_user_password }}'
gcoop_mysqldump_system_username: '{{backup_user}}'
gcoop_mysqldump_mysql_root_password: '{{ vault_mysql_root_password }}'
gcoop_mysqldump_host: localhost
gcoop_mysqldump_dir: /opt/backups
gcoop_mysqldump_permission: 755
gcoop_mysqldump_owner: '{{backup_user}}'
gcoop_mysqldump_group: '{{backup_user}}'
gcoop_mysqldump_cron_entries:
  - name: daily-crowd
    minute: 0
    hour: 2
    day: '*'
    database: 'crowd'
    format: '%F'
  - name: daily-confluence
    minute: 0
    hour: 2
    day: '*'
    database: 'confluence'
    format: '%F'
  - name: daily-bamboo
    minute: 0
    hour: 2
    day: '*'
    database: 'bamboo'
    format: '%F'

# Mysql Tuning
mysql_new_data_dir: /data/mysql

# Generated as terraform outputs when backup is configured
aws_access_key_id: '{{ vault_aws_access_key_id }}'
aws_secret_access_key: '{{ vault_aws_secret_access_key }}'
backup_tag: 'configured'
