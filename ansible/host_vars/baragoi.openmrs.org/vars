---
users:
 rob:
   comment: Robby OConnor
   groups: 'admin'
   ssh_key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJY27m87jJO1tPtzem6oGNxPa/qQy+PpdwOeO1tEk3UD0QQorDLEjQHeK3/549QCRpujjUXzE0D69T+0jys0hHqBhTNxNp+cA4ROnZpCm58VmJA9uf5lsb+bVSAcasDYllGPI+MKC4vcHjol2rDiPpAPlCRnLLe0KD4CaVm3X72DRv2OCOj1b7e8nQylDkKggnG1lExsWAvCLx11iLq2hIH7V+oYmkATBqsmFDhVPL9bbAN8y7E5BxHzma2wMwGhPc0tNYZndM7JPQeK8TbQgUehoiSOA8zdcTa6vhNYq3JCWHMIUNTh1A1Y/sfkqkkEDj1wn7bsEDeabbwXSrQeHb rob@rob-laptop"


datadog_tags_extra:
  - "service:id-dashboard"
  - "service-group:id"

letsencrypt_cert_domains:
   - baragoi.openmrs.org
   - id.openmrs.org

docker_deployment:
  - id

docker_deployable_images: []

nginx_vhosts:
  - listen: "80 default_server"
    server_name: "baragoi.openmrs.org"
    filename: "bagaroi.openmrs.org.80.conf"
    extra_parameters: |
      return 301 https://$host$request_uri;
  - listen: "443 ssl"
    server_name: "baragoi.openmrs.org"
    extra_parameters: |
      access_log /var/log/nginx/deployer_access.log;
      error_log /var/log/nginx/deployer_error.log;
      ssl_certificate /etc/letsencrypt/live/baragoi.openmrs.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/baragoi.openmrs.org/privkey.pem;
      location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
      }
      location / {
        #proxy_pass http://127.0.0.1:8080/;
        root /usr/share/nginx/html;
      }
  - listen: "80"
    server_name: "id.openmrs.org"
    filename: "id.openmrs.org.80.conf"
    extra_parameters: |
      return 301 https://$host$request_uri;
  - listen: "443 ssl"
    server_name: "id.openmrs.org"
    extra_parameters: |
      access_log /var/log/nginx/deployer_access.log;
      error_log /var/log/nginx/deployer_error.log;
      ssl_certificate /etc/letsencrypt/live/baragoi.openmrs.org/fullchain.pem;
      ssl_certificate_key /etc/letsencrypt/live/baragoi.openmrs.org/privkey.pem;
      location ^~ /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
      }
      location / {
        proxy_set_header HOST $host;
        proxy_set_header  X-Forwarded-Proto $scheme;
        proxy_pass http://127.0.0.1:3000/;
      }

aws_access_key_id: '{{ vault_aws_access_key_id }}'
aws_secret_access_key: '{{ vault_aws_secret_access_key }}'
backup_tag: 'configured'
